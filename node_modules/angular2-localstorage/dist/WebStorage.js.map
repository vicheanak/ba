{"version":3,"file":"WebStorage.js","sourceRoot":"","sources":["../WebStorage.ts"],"names":[],"mappings":"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","sourcesContent":["import {LocalStorageEmitter} from \"./LocalStorageEmitter\";\n\ninterface IWebStorage {\n    getItem: (key: string) => string;\n    setItem: (key: string, value: string) => void;\n}\n\nexport function LocalStorage(storageKey?: string) {\n    return WebStorage(storageKey, localStorage);\n}\n\nexport function SessionStorage(storageKey?: string) {\n    return WebStorage(storageKey, sessionStorage);\n}\n\nfunction WebStorage(storageKey: string, webStorage: IWebStorage) {\n    return (target: Object, decoratedPropertyName?: string): void => {\n        if (!webStorage) {\n            return;\n        }\n\n        if (!storageKey) {\n            storageKey = \"\" + \"/\" + decoratedPropertyName;\n        }\n\n        Object.defineProperty(target, \"_\" + decoratedPropertyName + \"_mapped\", {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n\n        let instances: any = [];\n        let values = {};\n\n        let storageValue = webStorage.getItem(storageKey) || null;\n        let storageValueJSON = storageValue;\n        if (\"string\" === typeof storageValue) {\n            try {\n                storageValue = JSON.parse(storageValue);\n            } catch (e) {\n                storageValue = null;\n                storageValueJSON = \"null\";\n            }\n        }\n        let oldJSONValues = {};\n\n        Object.defineProperty(target, decoratedPropertyName, {\n            get: function () {\n                if (false === this[\"_\" + decoratedPropertyName + \"_mapped\"]) {\n                    this[\"_\" + decoratedPropertyName + \"_mapped\"] = instances.length;\n\n                    // first registration triggers a setting to localStorage value\n                    values[instances.length] = storageValue;\n                    oldJSONValues[instances.length] = storageValueJSON;\n\n                    instances.push(this);\n                }\n                return values[this[\"_\" + decoratedPropertyName + \"_mapped\"]];\n            },\n            set: function (newValue) {\n                if (false === this[\"_\" + decoratedPropertyName + \"_mapped\"]) {\n                    this[\"_\" + decoratedPropertyName + \"_mapped\"] = instances.length;\n\n                    // first registration triggers a setting to localStorage value\n                    values[instances.length] = storageValue;\n                    oldJSONValues[instances.length] = storageValueJSON;\n\n                    instances.push(this);\n                    // first \"set\" call is ignored if we have already a value from the localStorage\n                    if (storageValue) {\n                        return;\n                    }\n                }\n                values[this[\"_\" + decoratedPropertyName + \"_mapped\"]] = newValue;\n            },\n            enumerable: true,\n            configurable: true\n        });\n\n        LocalStorageEmitter.subscribe(() => {\n            for (let instance of instances) {\n                let currentValue = JSON.stringify(instance[decoratedPropertyName]);\n                let oldJSONValue = oldJSONValues[instance[\"_\" + decoratedPropertyName + \"_mapped\"]];\n                if (currentValue !== oldJSONValue) {\n                    oldJSONValues[instance[\"_\" + decoratedPropertyName + \"_mapped\"]] = currentValue;\n                    webStorage.setItem(storageKey, currentValue);\n                }\n            }\n        });\n    };\n}\n"]}